{"version":3,"sources":["styles/GlobalStyle.js","components/CommentCard/CommentCard.styles.js","components/CommentCard/CommentCard.js","components/InfiniteScrollList/InfiniteScrollList.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","CommentCardStyled","styled","div","CommentCard","item","className","id","email","body","InfiniteScrollList","useState","commentList","setCommentList","pageNumber","setPageNumber","isLoading","setIsLoading","hasMore","setHasMore","loader","useRef","useEffect","axios","get","then","response","items","data","catch","error","console","warn","onIntersect","entries","forEach","entry","isIntersecting","prev","observer","IntersectionObserver","root","rootMargin","threshold","observe","current","disconnect","map","ref","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAyBeA,EAvBKC,YAAH,ya,gCCAJC,EAAoBC,IAAOC,IAAV,k7B,OCoBfC,EAnBK,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACrB,OACE,eAACJ,EAAD,WACE,sBAAKK,UAAU,aAAf,UACE,sBAAMA,UAAU,mBAAhB,wBACA,sBAAMA,UAAU,qBAAhB,SAAsCD,EAAKE,QAE7C,sBAAKD,UAAU,gBAAf,UACE,sBAAMA,UAAU,sBAAhB,mBACA,sBAAMA,UAAU,wBAAhB,SAAyCD,EAAKG,QAAc,OAE9D,sBAAKF,UAAU,eAAf,UACE,sBAAMA,UAAU,qBAAhB,qBACA,qBAAKA,UAAU,uBAAf,SAAuCD,EAAKI,OAAY,WC4CjDC,EAvDY,WACzB,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAoCF,mBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACMC,EAASC,iBAAO,MAetBC,qBAAU,WAXRL,GAAa,GACbM,IACGC,IADH,8DAC8DV,EAD9D,eAEGW,MAAK,SAAAC,GACJT,GAAa,GACbJ,GAAe,SAAAc,GAAK,4BAAQA,GAAR,YAAkBD,EAASE,UAC/CT,EATa,KASFL,MAEZe,OAAM,SAAAC,GAAK,OAAIC,QAAQC,KAAKF,QAK9B,CAAChB,IAEJ,IAAMmB,EAAc,SAAAC,GAClBA,EAAQC,SAAQ,SAAAC,GACVA,EAAMC,gBAAkBnB,GAC1BH,GAAc,SAAAuB,GAAI,OAAIA,EAAO,SAgBnC,OAXAhB,qBAAU,WACR,IAKMiB,EAAW,IAAIC,qBAAqBP,EAL1B,CACdQ,KAAM,KACNC,WAAY,MACZC,UAAW,IAIb,OADK3B,GAAWuB,EAASK,QAAQxB,EAAOyB,SACjC,kBAAMN,EAASO,gBACrB,CAAC1B,EAAQJ,IAGV,sBAAKV,UAAU,oBAAf,UACGM,EAAYmC,KAAI,SAAA1C,GAAI,OACnB,cAAC,EAAD,CAA2BA,KAAMA,GAAfA,EAAKE,OAEzB,qBAAKyC,IAAK5B,EAAQd,UAAU,SAA5B,SACGU,GAAa,mBCxCPiC,MATf,WACE,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCLNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f1e5d724.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  *, *::before, *::after {\n    box-sizing: border-box;\n    padding:0;\n    margin:0;\n  }\n  body {\n    font-family: \"Helvetica\", \"Arial\", sans-serif;\n    line-height: 21px;\n  }\n  #root {\n    width: 100%;\n    height: 100%;\n    font-weight: normal;\n  }\n  .content-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nexport default GlobalStyle;\n","import styled from \"styled-components\";\n\nexport const CommentCardStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  width: 500px;\n  height: auto;\n  border-radius: 20px;\n  background-color: #f8f9fa;\n  border: 0.5px solid #ced4da;\n  margin-top: 6px;\n  margin-bottom: 6px;\n  color: #212529;\n  font-size: 18px;\n\n  .comment-id {\n    margin-top: 20px;\n    margin-left: 20px;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n  }\n\n  .comment-id-title,\n  .comment-email-title,\n  .comment-body-title {\n    font-weight: 600;\n  }\n\n  .comment-id-content {\n    margin-left: 12px;\n  }\n\n  .comment-email {\n    margin-top: 12px;\n    margin-left: 20px;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n  }\n\n  .comment-email-content {\n    margin-left: 12px;\n  }\n\n  .comment-body {\n    margin: 20px;\n    margin-top: 12px;\n    display: flex;\n    flex-direction: column;\n  }\n`;\n","import React from \"react\";\nimport { CommentCardStyled } from \"./CommentCard.styles\";\n\nconst CommentCard = ({ item }) => {\n  return (\n    <CommentCardStyled>\n      <div className=\"comment-id\">\n        <span className=\"comment-id-title\">Comment Id</span>\n        <span className=\"comment-id-content\">{item.id}</span>\n      </div>\n      <div className=\"comment-email\">\n        <span className=\"comment-email-title\">Email</span>\n        <span className=\"comment-email-content\">{item.email}</span>{\" \"}\n      </div>\n      <div className=\"comment-body\">\n        <span className=\"comment-body-title\">Comment</span>\n        <div className=\"comment-body-content\">{item.body}</div>{\" \"}\n      </div>\n    </CommentCardStyled>\n  );\n};\n\nexport default CommentCard;\n","import axios from \"axios\";\nimport React, { useState, useRef, useEffect } from \"react\";\n\nimport CommentCard from \"../CommentCard/CommentCard\";\n\nconst InfiniteScrollList = () => {\n  const [commentList, setCommentList] = useState([]);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasMore, setHasMore] = useState(true);\n  const loader = useRef(null);\n  const PAGE_LIMIT = 50;\n\n  const getCommentList = () => {\n    setIsLoading(true);\n    axios\n      .get(`https://jsonplaceholder.typicode.com/comments?_page=${pageNumber}&_limit=10`)\n      .then(response => {\n        setIsLoading(false);\n        setCommentList(items => [...items, ...response.data]);\n        setHasMore(pageNumber !== PAGE_LIMIT);\n      })\n      .catch(error => console.warn(error));\n  };\n\n  useEffect(() => {\n    getCommentList();\n  }, [pageNumber]);\n\n  const onIntersect = entries => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting && hasMore) {\n        setPageNumber(prev => prev + 1);\n      }\n    });\n  };\n\n  useEffect(() => {\n    const options = {\n      root: null,\n      rootMargin: \"0px\",\n      threshold: 0,\n    };\n    const observer = new IntersectionObserver(onIntersect, options);\n    if (!isLoading) observer.observe(loader.current);\n    return () => observer.disconnect();\n  }, [loader, isLoading]);\n\n  return (\n    <div className=\"content-container\">\n      {commentList.map(item => (\n        <CommentCard key={item.id} item={item} />\n      ))}\n      <div ref={loader} className=\"loader\">\n        {isLoading && \"Loading...\"}\n      </div>\n    </div>\n  );\n};\n\nexport default InfiniteScrollList;\n","import React from \"react\";\n\nimport GlobalStyle from \"./styles/GlobalStyle\";\nimport InfiniteScrollList from \"./components/InfiniteScrollList/InfiniteScrollList\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <InfiniteScrollList />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}
{"version":3,"sources":["Comment.styles.js","Comment.js","App.js","index.js"],"names":["CommentStyled","styled","div","Comment","item","className","id","email","body","substring","GlobalStyle","createGlobalStyle","App","useState","items","setItems","pages","setPages","loader","useRef","getItems","a","axios","get","then","response","data","useEffect","onIntersect","entry","forEach","element","isIntersecting","prev","observer","IntersectionObserver","root","rootMargin","threshold","observe","current","disconnect","map","index","ref","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAEaA,EAAgBC,IAAOC,IAAV,m7B,OCoBXC,EAnBC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjB,OACE,eAACJ,EAAD,WACE,sBAAKK,UAAU,aAAf,UACE,sBAAMA,UAAU,mBAAhB,wBACA,sBAAMA,UAAU,qBAAhB,SAAsCD,EAAKE,QAE7C,sBAAKD,UAAU,gBAAf,UACE,sBAAMA,UAAU,sBAAhB,mBACA,sBAAMA,UAAU,wBAAhB,SAAyCD,EAAKG,QAAc,OAE9D,sBAAKF,UAAU,eAAf,UACE,sBAAMA,UAAU,qBAAhB,qBACA,qBAAKA,UAAU,uBAAf,SAAuCD,EAAKI,KAAKC,UAAU,EAAG,OAAY,WCV5EC,EAAcC,YAAH,iXAyEFC,MAnDf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACMC,EAASC,iBAAO,MAEhBC,EAAQ,uCAAG,sBAAAC,EAAA,sEACTC,IAAMC,IAAN,8DAAiEP,EAAjE,eAAoFQ,MAAK,SAAAC,GAC7FV,EAAS,GAAD,mBAAKD,GAAL,YAAeW,EAASC,WAFnB,2CAAH,qDAMdC,qBAAU,WACRP,MACC,IAEHO,qBAAU,WACRP,MACC,CAACJ,IAEJ,IAAMY,EAAW,uCAAG,WAAMC,GAAN,SAAAR,EAAA,sDAClBQ,EAAMC,SAAQ,SAAAC,GACRA,EAAQC,gBACVf,GAAS,SAAAgB,GAAI,OAAIA,EAAO,QAHV,2CAAH,sDAmBjB,OAXAN,qBAAU,WACR,IAKMO,EAAW,IAAIC,qBAAqBP,EAL1B,CACdQ,KAAM,KACNC,WAAY,MACZC,UAAW,IAIb,OADAJ,EAASK,QAAQrB,EAAOsB,SACjB,kBAAMN,EAASO,gBACrB,CAACvB,IAGF,qCACE,sBAAKb,UAAU,oBAAf,UACGS,EAAM4B,KAAI,SAACtC,EAAMuC,GAAP,OACT,cAAC,EAAD,CAAuBvC,KAAMA,GAAfA,EAAKE,OAErB,qBAAKsC,IAAK1B,EAAQb,UAAU,cAE9B,cAACK,EAAD,QCtENmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7980755c.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const CommentStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  width: 500px;\n  height: 193px;\n  border-radius: 20px;\n  background-color: #f8f9fa;\n  border: 0.5px solid #ced4da;\n  margin-top: 6px;\n  margin-bottom: 6px;\n  color: #212529;\n  font-size: 18px;\n\n  .comment-id {\n    margin-top: 20px;\n    margin-left: 20px;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n  }\n\n  .comment-id-title,\n  .comment-email-title,\n  .comment-body-title {\n    font-weight: 600;\n  }\n\n  .comment-id-content {\n    margin-left: 12px;\n  }\n\n  .comment-email {\n    margin-top: 12px;\n    margin-left: 20px;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n  }\n\n  .comment-email-content {\n    margin-left: 12px;\n  }\n\n  .comment-body {\n    margin: 20px;\n    margin-top: 12px;\n    display: flex;\n    flex-direction: column;\n  }\n`;\n","import React from \"react\";\nimport { CommentStyled } from \"./Comment.styles\";\n\nconst Comment = ({ item }) => {\n  return (\n    <CommentStyled>\n      <div className=\"comment-id\">\n        <span className=\"comment-id-title\">Comment Id</span>\n        <span className=\"comment-id-content\">{item.id}</span>\n      </div>\n      <div className=\"comment-email\">\n        <span className=\"comment-email-title\">Email</span>\n        <span className=\"comment-email-content\">{item.email}</span>{\" \"}\n      </div>\n      <div className=\"comment-body\">\n        <span className=\"comment-body-title\">Comment</span>\n        <div className=\"comment-body-content\">{item.body.substring(0, 150)}</div>{\" \"}\n      </div>\n    </CommentStyled>\n  );\n};\n\nexport default Comment;\n","import axios from \"axios\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\n\nimport Comment from \"./Comment\";\n\nconst GlobalStyle = createGlobalStyle`\n  html, body {\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n    font-family: Arial, Sans-Serif;\n  }\n\n  #root {\n    width: 100%;\n    height: 100%;\n    font-weight: normal;\n  }\n\n  .content-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nfunction App() {\n  const [items, setItems] = useState([]);\n  const [pages, setPages] = useState(1);\n  const loader = useRef(null);\n\n  const getItems = async () => {\n    await axios.get(`https://jsonplaceholder.typicode.com/comments?_page=${pages}&_limit=10`).then(response => {\n      setItems([...items, ...response.data]);\n    });\n  };\n\n  useEffect(() => {\n    getItems();\n  }, []);\n\n  useEffect(() => {\n    getItems();\n  }, [pages]);\n\n  const onIntersect = async entry => {\n    entry.forEach(element => {\n      if (element.isIntersecting) {\n        setPages(prev => prev + 1);\n      }\n    });\n  };\n\n  useEffect(() => {\n    const options = {\n      root: null,\n      rootMargin: \"0px\",\n      threshold: 0,\n    };\n    const observer = new IntersectionObserver(onIntersect, options);\n    observer.observe(loader.current);\n    return () => observer.disconnect();\n  }, [loader]);\n\n  return (\n    <>\n      <div className=\"content-container\">\n        {items.map((item, index) => (\n          <Comment key={item.id} item={item} />\n        ))}\n        <div ref={loader} className=\"loader\"></div>\n      </div>\n      <GlobalStyle />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}